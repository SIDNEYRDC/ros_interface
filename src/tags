!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
add_node	ros_interface.cpp	/^void ros_interface::add_node(int id, int type, string target) {$/;"	f	class:ros_interface
check_node	ros_interface.cpp	/^bool ros_interface::check_node(const int id, unsigned int &index) {$/;"	f	class:ros_interface
clock	ros_interface.cpp	/^void ros_interface::clock(const float time) {$/;"	f	class:ros_interface
get_pose	node.cpp	/^position node::get_pose() {$/;"	f	class:node
get_vel	node.cpp	/^velocity node::get_vel() {$/;"	f	class:node
node	node.cpp	/^node::node(const int id, const int type, const string target) {$/;"	f	class:node
node_receive	ros_interface.cpp	/^position ros_interface::node_receive(const int id) {$/;"	f	class:ros_interface
node_send	ros_interface.cpp	/^void ros_interface::node_send(const int id, velocity msg) {$/;"	f	class:ros_interface
publish	node.cpp	/^void node::publish(velocity vel_msg) {$/;"	f	class:node
ros_interface	ros_interface.cpp	/^ros_interface::ros_interface(int argc, char** argv, string node_name) {$/;"	f	class:ros_interface
ros_ok	ros_interface.cpp	/^bool ros_interface::ros_ok() {$/;"	f	class:ros_interface
show_pose	node.cpp	/^void node::show_pose() {$/;"	f	class:node
stage_pose_callback	node.cpp	/^void node::stage_pose_callback(const nav_msgs::Odometry::ConstPtr &msg) {$/;"	f	class:node
turtle_callback	node.cpp	/^void node::turtle_callback(const turtlesim::Pose::ConstPtr &msg) {$/;"	f	class:node
~node	node.cpp	/^node::~node() {$/;"	f	class:node
~ros_interface	ros_interface.cpp	/^ros_interface::~ros_interface() {$/;"	f	class:ros_interface
